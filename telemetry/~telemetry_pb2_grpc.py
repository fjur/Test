# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import telemetry_pb2 as telemetry__pb2


class TelemetryStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetLog = channel.unary_unary(
        '/telemetry.Telemetry/GetLog',
        request_serializer=telemetry__pb2.LogId.SerializeToString,
        response_deserializer=telemetry__pb2.Log.FromString,
        )
    self.AddLog = channel.unary_unary(
        '/telemetry.Telemetry/AddLog',
        request_serializer=telemetry__pb2.Log.SerializeToString,
        response_deserializer=telemetry__pb2.LogId.FromString,
        )


class TelemetryServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TelemetryServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetLog': grpc.unary_unary_rpc_method_handler(
          servicer.GetLog,
          request_deserializer=telemetry__pb2.LogId.FromString,
          response_serializer=telemetry__pb2.Log.SerializeToString,
      ),
      'AddLog': grpc.unary_unary_rpc_method_handler(
          servicer.AddLog,
          request_deserializer=telemetry__pb2.Log.FromString,
          response_serializer=telemetry__pb2.LogId.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'telemetry.Telemetry', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
