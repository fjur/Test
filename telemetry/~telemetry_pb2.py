# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: telemetry.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='telemetry.proto',
  package='telemetry',
  syntax='proto3',
  serialized_pb=_b('\n\x0ftelemetry.proto\x12\ttelemetry\"\x16\n\x05LogId\x12\r\n\x05logId\x18\x01 \x01(\x05\":\n\x03Log\x12\x1f\n\x05logId\x18\x01 \x01(\x0b\x32\x10.telemetry.LogId\x12\x12\n\nlogMessage\x18\x02 \x01(\t2g\n\tTelemetry\x12,\n\x06GetLog\x12\x10.telemetry.LogId\x1a\x0e.telemetry.Log\"\x00\x12,\n\x06\x41\x64\x64Log\x12\x0e.telemetry.Log\x1a\x10.telemetry.LogId\"\x00\x62\x06proto3')
)




_LOGID = _descriptor.Descriptor(
  name='LogId',
  full_name='telemetry.LogId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='logId', full_name='telemetry.LogId.logId', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=52,
)


_LOG = _descriptor.Descriptor(
  name='Log',
  full_name='telemetry.Log',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='logId', full_name='telemetry.Log.logId', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logMessage', full_name='telemetry.Log.logMessage', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=54,
  serialized_end=112,
)

_LOG.fields_by_name['logId'].message_type = _LOGID
DESCRIPTOR.message_types_by_name['LogId'] = _LOGID
DESCRIPTOR.message_types_by_name['Log'] = _LOG
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

LogId = _reflection.GeneratedProtocolMessageType('LogId', (_message.Message,), dict(
  DESCRIPTOR = _LOGID,
  __module__ = 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:telemetry.LogId)
  ))
_sym_db.RegisterMessage(LogId)

Log = _reflection.GeneratedProtocolMessageType('Log', (_message.Message,), dict(
  DESCRIPTOR = _LOG,
  __module__ = 'telemetry_pb2'
  # @@protoc_insertion_point(class_scope:telemetry.Log)
  ))
_sym_db.RegisterMessage(Log)



_TELEMETRY = _descriptor.ServiceDescriptor(
  name='Telemetry',
  full_name='telemetry.Telemetry',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=114,
  serialized_end=217,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetLog',
    full_name='telemetry.Telemetry.GetLog',
    index=0,
    containing_service=None,
    input_type=_LOGID,
    output_type=_LOG,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddLog',
    full_name='telemetry.Telemetry.AddLog',
    index=1,
    containing_service=None,
    input_type=_LOG,
    output_type=_LOGID,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_TELEMETRY)

DESCRIPTOR.services_by_name['Telemetry'] = _TELEMETRY

# @@protoc_insertion_point(module_scope)
